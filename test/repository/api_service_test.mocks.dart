// Mocks generated by Mockito 5.4.2 from annotations
// in bexmovil/test/repository/api_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bexmovil/src/data/datasources/remote/api_service.dart' as _i3;
import 'package:bexmovil/src/domain/models/responses/change_password_response.dart'
    as _i10;
import 'package:bexmovil/src/domain/models/responses/enterprise_config_response.dart'
    as _i6;
import 'package:bexmovil/src/domain/models/responses/enterprise_response.dart'
    as _i5;
import 'package:bexmovil/src/domain/models/responses/login_response.dart'
    as _i7;
import 'package:bexmovil/src/domain/models/responses/recovery_code_response.dart'
    as _i8;
import 'package:bexmovil/src/domain/models/responses/validate_recovery_code_response.dart'
    as _i9;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.Response<_i5.EnterpriseResponse>> getEnterprise(
          String? company) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEnterprise,
          [company],
        ),
        returnValue: _i4.Future<_i2.Response<_i5.EnterpriseResponse>>.value(
            _FakeResponse_1<_i5.EnterpriseResponse>(
          this,
          Invocation.method(
            #getEnterprise,
            [company],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i5.EnterpriseResponse>>.value(
                _FakeResponse_1<_i5.EnterpriseResponse>(
          this,
          Invocation.method(
            #getEnterprise,
            [company],
          ),
        )),
      ) as _i4.Future<_i2.Response<_i5.EnterpriseResponse>>);

  @override
  _i4.Future<_i2.Response<_i6.EnterpriseConfigResponse>>
      getConfigEnterprise() => (super.noSuchMethod(
            Invocation.method(
              #getConfigEnterprise,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Response<_i6.EnterpriseConfigResponse>>.value(
                    _FakeResponse_1<_i6.EnterpriseConfigResponse>(
              this,
              Invocation.method(
                #getConfigEnterprise,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.Response<_i6.EnterpriseConfigResponse>>.value(
                    _FakeResponse_1<_i6.EnterpriseConfigResponse>(
              this,
              Invocation.method(
                #getConfigEnterprise,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Response<_i6.EnterpriseConfigResponse>>);

  @override
  _i4.Future<_i2.Response<_i7.LoginResponse>> login({
    dynamic username,
    dynamic password,
    dynamic deviceId,
    dynamic model,
    dynamic date,
    dynamic latitude,
    dynamic longitude,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #username: username,
            #password: password,
            #deviceId: deviceId,
            #model: model,
            #date: date,
            #latitude: latitude,
            #longitude: longitude,
          },
        ),
        returnValue: _i4.Future<_i2.Response<_i7.LoginResponse>>.value(
            _FakeResponse_1<_i7.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #username: username,
              #password: password,
              #deviceId: deviceId,
              #model: model,
              #date: date,
              #latitude: latitude,
              #longitude: longitude,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i7.LoginResponse>>.value(
                _FakeResponse_1<_i7.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #username: username,
              #password: password,
              #deviceId: deviceId,
              #model: model,
              #date: date,
              #latitude: latitude,
              #longitude: longitude,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<_i7.LoginResponse>>);

  @override
  _i4.Future<_i2.Response<_i8.RecoveryCodeResponse>> requestRecoveryCode(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestRecoveryCode,
          [],
          {#email: email},
        ),
        returnValue: _i4.Future<_i2.Response<_i8.RecoveryCodeResponse>>.value(
            _FakeResponse_1<_i8.RecoveryCodeResponse>(
          this,
          Invocation.method(
            #requestRecoveryCode,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i8.RecoveryCodeResponse>>.value(
                _FakeResponse_1<_i8.RecoveryCodeResponse>(
          this,
          Invocation.method(
            #requestRecoveryCode,
            [],
            {#email: email},
          ),
        )),
      ) as _i4.Future<_i2.Response<_i8.RecoveryCodeResponse>>);

  @override
  _i4.Future<
      _i2.Response<_i9.ValidateRecoveryCodeResponse>> validateRecoveryCode(
          {required String? code}) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateRecoveryCode,
          [],
          {#code: code},
        ),
        returnValue:
            _i4.Future<_i2.Response<_i9.ValidateRecoveryCodeResponse>>.value(
                _FakeResponse_1<_i9.ValidateRecoveryCodeResponse>(
          this,
          Invocation.method(
            #validateRecoveryCode,
            [],
            {#code: code},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i9.ValidateRecoveryCodeResponse>>.value(
                _FakeResponse_1<_i9.ValidateRecoveryCodeResponse>(
          this,
          Invocation.method(
            #validateRecoveryCode,
            [],
            {#code: code},
          ),
        )),
      ) as _i4.Future<_i2.Response<_i9.ValidateRecoveryCodeResponse>>);

  @override
  _i4.Future<_i2.Response<_i10.ChangePasswordResponse>> changePassword({
    required String? code,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {
            #code: code,
            #password: password,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<_i10.ChangePasswordResponse>>.value(
                _FakeResponse_1<_i10.ChangePasswordResponse>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {
              #code: code,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i10.ChangePasswordResponse>>.value(
                _FakeResponse_1<_i10.ChangePasswordResponse>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {
              #code: code,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<_i10.ChangePasswordResponse>>);
}
