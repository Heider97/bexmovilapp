// Mocks generated by Mockito 5.4.2 from annotations
// in bexmovil/test/ui/login/bloc/login_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:bexmovil/src/data/repositories/api_repository_impl.dart' as _i5;
import 'package:bexmovil/src/domain/models/processing_queue.dart' as _i23;
import 'package:bexmovil/src/domain/models/requests/change_password_request.dart'
    as _i20;
import 'package:bexmovil/src/domain/models/requests/database_request.dart'
    as _i14;
import 'package:bexmovil/src/domain/models/requests/enterprise_config_request.dart'
    as _i10;
import 'package:bexmovil/src/domain/models/requests/enterprise_request.dart'
    as _i8;
import 'package:bexmovil/src/domain/models/requests/login_request.dart' as _i12;
import 'package:bexmovil/src/domain/models/requests/recovery_code_request.dart'
    as _i16;
import 'package:bexmovil/src/domain/models/requests/validate_code_request.dart'
    as _i18;
import 'package:bexmovil/src/domain/models/responses/change_password_response.dart'
    as _i19;
import 'package:bexmovil/src/domain/models/responses/database_response.dart'
    as _i13;
import 'package:bexmovil/src/domain/models/responses/enterprise_config_response.dart'
    as _i9;
import 'package:bexmovil/src/domain/models/responses/enterprise_response.dart'
    as _i7;
import 'package:bexmovil/src/domain/models/responses/login_response.dart'
    as _i11;
import 'package:bexmovil/src/domain/models/responses/recovery_code_response.dart'
    as _i15;
import 'package:bexmovil/src/domain/models/responses/validate_recovery_code_response.dart'
    as _i17;
import 'package:bexmovil/src/domain/repositories/database_repository.dart'
    as _i22;
import 'package:bexmovil/src/services/navigation.dart' as _i26;
import 'package:bexmovil/src/services/storage.dart' as _i25;
import 'package:bexmovil/src/utils/resources/data_state.dart' as _i2;
import 'package:dio/dio.dart' as _i21;
import 'package:flutter/material.dart' as _i4;
import 'package:location_repository/src/location_repository.dart' as _i24;
import 'package:location_repository/src/model/current_location.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCurrentUserLocationEntity_1 extends _i1.SmartFake
    implements _i3.CurrentUserLocationEntity {
  _FakeCurrentUserLocationEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_2<T extends _i4.State<_i4.StatefulWidget>>
    extends _i1.SmartFake implements _i4.GlobalKey<T> {
  _FakeGlobalKey_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepositoryImpl extends _i1.Mock implements _i5.ApiRepositoryImpl {
  @override
  _i6.Future<_i2.DataState<_i7.EnterpriseResponse>> getEnterprise(
          {required _i8.EnterpriseRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEnterprise,
          [],
          {#request: request},
        ),
        returnValue: _i6.Future<_i2.DataState<_i7.EnterpriseResponse>>.value(
            _FakeDataState_0<_i7.EnterpriseResponse>(
          this,
          Invocation.method(
            #getEnterprise,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i7.EnterpriseResponse>>.value(
                _FakeDataState_0<_i7.EnterpriseResponse>(
          this,
          Invocation.method(
            #getEnterprise,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i7.EnterpriseResponse>>);

  @override
  _i6.Future<_i2.DataState<_i9.EnterpriseConfigResponse>> getConfigEnterprise(
          {required _i10.EnterpriseConfigRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConfigEnterprise,
          [],
          {#request: request},
        ),
        returnValue:
            _i6.Future<_i2.DataState<_i9.EnterpriseConfigResponse>>.value(
                _FakeDataState_0<_i9.EnterpriseConfigResponse>(
          this,
          Invocation.method(
            #getConfigEnterprise,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i9.EnterpriseConfigResponse>>.value(
                _FakeDataState_0<_i9.EnterpriseConfigResponse>(
          this,
          Invocation.method(
            #getConfigEnterprise,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i9.EnterpriseConfigResponse>>);

  @override
  _i6.Future<_i2.DataState<_i11.LoginResponse>> login(
          {required _i12.LoginRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {#request: request},
        ),
        returnValue: _i6.Future<_i2.DataState<_i11.LoginResponse>>.value(
            _FakeDataState_0<_i11.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i11.LoginResponse>>.value(
                _FakeDataState_0<_i11.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i11.LoginResponse>>);

  @override
  _i6.Future<_i2.DataState<_i13.DatabaseResponse>> database(
          {required _i14.DatabaseRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #database,
          [],
          {#request: request},
        ),
        returnValue: _i6.Future<_i2.DataState<_i13.DatabaseResponse>>.value(
            _FakeDataState_0<_i13.DatabaseResponse>(
          this,
          Invocation.method(
            #database,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i13.DatabaseResponse>>.value(
                _FakeDataState_0<_i13.DatabaseResponse>(
          this,
          Invocation.method(
            #database,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i13.DatabaseResponse>>);

  @override
  _i6.Future<_i2.DataState<_i15.RecoveryCodeResponse>> requestRecoveryCode(
          {required _i16.RecoveryCodeRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestRecoveryCode,
          [],
          {#request: request},
        ),
        returnValue: _i6.Future<_i2.DataState<_i15.RecoveryCodeResponse>>.value(
            _FakeDataState_0<_i15.RecoveryCodeResponse>(
          this,
          Invocation.method(
            #requestRecoveryCode,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i15.RecoveryCodeResponse>>.value(
                _FakeDataState_0<_i15.RecoveryCodeResponse>(
          this,
          Invocation.method(
            #requestRecoveryCode,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i15.RecoveryCodeResponse>>);

  @override
  _i6.Future<
      _i2.DataState<_i17.ValidateRecoveryCodeResponse>> validateRecoveryCode(
          {required _i18.ValidateCodeRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateRecoveryCode,
          [],
          {#request: request},
        ),
        returnValue:
            _i6.Future<_i2.DataState<_i17.ValidateRecoveryCodeResponse>>.value(
                _FakeDataState_0<_i17.ValidateRecoveryCodeResponse>(
          this,
          Invocation.method(
            #validateRecoveryCode,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i17.ValidateRecoveryCodeResponse>>.value(
                _FakeDataState_0<_i17.ValidateRecoveryCodeResponse>(
          this,
          Invocation.method(
            #validateRecoveryCode,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i17.ValidateRecoveryCodeResponse>>);

  @override
  _i6.Future<_i2.DataState<_i19.ChangePasswordResponse>> changePassword(
          {required _i20.ChangePasswordRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {#request: request},
        ),
        returnValue:
            _i6.Future<_i2.DataState<_i19.ChangePasswordResponse>>.value(
                _FakeDataState_0<_i19.ChangePasswordResponse>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<_i19.ChangePasswordResponse>>.value(
                _FakeDataState_0<_i19.ChangePasswordResponse>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i19.ChangePasswordResponse>>);

  @override
  _i6.Future<_i2.DataState<T>> getStateOf<T>(
          {required _i6.Future<_i21.Response<T>> Function()? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStateOf,
          [],
          {#request: request},
        ),
        returnValue: _i6.Future<_i2.DataState<T>>.value(_FakeDataState_0<T>(
          this,
          Invocation.method(
            #getStateOf,
            [],
            {#request: request},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DataState<T>>.value(_FakeDataState_0<T>(
          this,
          Invocation.method(
            #getStateOf,
            [],
            {#request: request},
          ),
        )),
      ) as _i6.Future<_i2.DataState<T>>);
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i22.DatabaseRepository {
  @override
  _i6.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<int> updateProcessingQueue(
          _i23.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> insertProcessingQueue(
          _i23.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> emptyProcessingQueues() => (super.noSuchMethod(
        Invocation.method(
          #emptyProcessingQueues,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [LocationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationRepository extends _i1.Mock
    implements _i24.LocationRepository {
  @override
  _i6.Future<_i3.CurrentUserLocationEntity> getCurrentLocation() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i6.Future<_i3.CurrentUserLocationEntity>.value(
            _FakeCurrentUserLocationEntity_1(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.CurrentUserLocationEntity>.value(
                _FakeCurrentUserLocationEntity_1(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
      ) as _i6.Future<_i3.CurrentUserLocationEntity>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i25.LocalStorageService {
  @override
  void setString(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setObject(
    dynamic key,
    dynamic object,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setObject,
          [
            key,
            object,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInt(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDouble(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBool(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void remove(dynamic key) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i26.NavigationService {
  @override
  _i4.GlobalKey<_i4.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_2<_i4.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_2<_i4.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i4.GlobalKey<_i4.NavigatorState>);

  @override
  _i6.Future<dynamic> goTo(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #goTo,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> replaceTo(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceTo,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  void goBack() => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
